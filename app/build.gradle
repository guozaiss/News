apply plugin: 'com.android.application'
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        buildConfigField("boolean", "debug", "true")
        applicationId properties.getProperty('APPID')
        minSdkVersion 15
        targetSdkVersion 23
        versionCode VERSIONCODE as Integer
        versionName VERSIONNAME
        multiDexEnabled true
    }
    signingConfigs {
        debug {
            //keystore
            storeFile file(properties.getProperty('FILE_PATH'))
            storePassword properties.getProperty('STOREPWD')
            keyAlias properties.getProperty('KEYALIAS')
            keyPassword properties.getProperty('KEYPWD')
        }
    }
    buildTypes {
        debug {
//            applicationIdSuffix ".debug"
            manifestPlaceholders = [APP_NAME: "新闻小站-\ndebug"]
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "debug", "true"
            minifyEnabled false
            //移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled false
        }
        release {
            signingConfig signingConfigs.debug
            manifestPlaceholders = [APP_NAME: "新闻小站"]
            buildConfigField "boolean", "debug", "false"
            minifyEnabled false
            //移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
        }
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                def fileName = "news_${variant.buildType.name}_v${defaultConfig.versionName}.apk"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}
//获取当前时间
def releaseTime() {
    return new Date().format("yyyy-MM-dd ")
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    compile 'com.google.firebase:firebase-ads:9.0.0'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'com.jakewharton.timber:timber:4.1.2'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.zhy:percent-support-extends:1.0.1'
    compile 'io.reactivex:rxjava:1.0.14'
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
    compile 'in.srain.cube:ultra-ptr:1.0.11'
    compile 'com.android.support:support-v4:23.4.0'
}

apply plugin: 'com.google.gms.google-services'

//Method sum
buildscript {
    repositories {
        mavenCentral() // or jcenter()
    }
    dependencies {
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.3.0'
    }
}
apply plugin: 'com.getkeepsafe.dexcount'